<?xml version="1.0" encoding="utf-8"?>
<QSFConfiguration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <HomePageTitle>Xamarin</HomePageTitle>
  <HomePageTitleIcon>Logo.png</HomePageTitleIcon>
  <SideDrawerHeaderTitle>Telerik UI for Xamarin</SideDrawerHeaderTitle>
  <SideDrawerSubHeaderTitle>R3 2019</SideDrawerSubHeaderTitle>
  <SideDrawerHeaderIcon>Logo_SD.png</SideDrawerHeaderIcon>
  <QSFAboutHeader>Overview</QSFAboutHeader>
  <QSFAboutImageName>TelerikXamarin_Logo.png</QSFAboutImageName>
  <QSFAboutLinkText>Telerik® UI for Xamarin</QSFAboutLinkText>
  <QSFAboutContent>This is a suite of professionally designed UI components for building modern, feature rich Xamarin.Forms apps from a single C# code base targeting the most popular mobile platforms such as Android and iOS, as well as UWP.</QSFAboutContent>
  <SplashScreen>
    <Title>Telerik UI for Xamarin</Title>
    <Icon>Logo.png</Icon>
    <Slides>
      <Slide>
        <Title>Complete toolkit for building truly native, cross-platform mobile apps for any scenario</Title>
        <Icon>KeyFeature_1.png</Icon>
        <Content>The Telerik controls for Xamarin.Forms enables developers to implement cross-platform native mobile apps, with profesionally designed UX, in no time</Content>
      </Slide>
      <Slide>
        <Title>Key Features:</Title>
        <Icon>KeyFeature_2.png</Icon>
        <Content>One C# Project – Three Native Mobile Apps</Content>
      </Slide>
      <Slide>
        <Title>Key Features:</Title>
        <Icon>KeyFeature_3.png</Icon>
        <Content>Native UI &amp; Performance on Every Platform</Content>
      </Slide>
      <Slide>
        <Title>Key Features:</Title>
        <Icon>KeyFeature_4.png</Icon>
        <Content>MVVM Support</Content>
      </Slide>
      <Slide>
        <Title>Key Features:</Title>
        <Icon>KeyFeature_5.png</Icon>
        <Content>Theming Mechanism &amp; Predefined Theme</Content>
      </Slide>
    </Slides>
  </SplashScreen>
  <SourceURL>https://github.com/telerik/telerik-xamarin-forms-samples</SourceURL>
  <DocumentationURL>https://docs.telerik.com/devtools/xamarin</DocumentationURL>
  <ProductPageURL>https://www.telerik.com/xamarin-ui</ProductPageURL>
  <WhatsNewPageURL>https://www.telerik.com/support/whats-new/xamarin-ui</WhatsNewPageURL>
  <Controls>
    <Control>
      <Name>Accordion</Name>
      <Image>Accordion_FirstLook.png</Image>
      <DescriptionHeader>Accordion</DescriptionHeader>
      <ShortDescription>RadAccordion for Xamarin is a collapsible content control that helps you save screen space and at the same time present the content in an easily accessible way.</ShortDescription>
      <FullDescription>Telerik Accordion for Xamarin is a vertically collapsible content panel that displays only one of its items at a time within the available space. RadAccordion helps you save screen space and at the same time present the content to the end user in an easily accessible way.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/accordion/accordion-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>Accordion_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>This example demonstrates basic setup of RadAccordion for presenting content in collapsible sections. The control is designed in such a way that opening one section automatically closes the previously displayed content.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>true</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/AccordionControl/FirstLookExample</CodeURL>
        </Example>
        <Example>
          <Name>Customization</Name>
          <Image>Accordion_Customization.png</Image>
          <DescriptionHeader>Customization</DescriptionHeader>
          <Description>This example demonstrates how you could customize the visual appearance of RadAccordion by predefining the Accordion item header template.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/AccordionControl/CustomizationExample</CodeURL>
        </Example>
        <Example>
          <Name>Configuration</Name>
          <Image>Accordion_Configuration.png</Image>
          <DescriptionHeader>Configuration</DescriptionHeader>
          <Description>This example presents various configuration options you could use to make the Accordion control look and animate per your choice.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/AccordionControl/ConfigurationExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>AutoCompleteView</Name>
      <DisplayName>AutoCompleteView</DisplayName>
      <Image>AutoCompleteView_FirstLook.png</Image>
      <DescriptionHeader>AutoCompleteView</DescriptionHeader>
      <ShortDescription>RadAutoCompleteView control can automatically complete user input string by comparing the text being entered to all strings in the associated data source.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin AutoCompleteView can automatically complete user input string by comparing the text being entered to all strings in the associated data source. The control has a number of advanced features such as different filtering options, tokens support and remote search, as well as full customization capabilities.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/autocompleteview/autocompleteview-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>AutoCompleteView_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>An example demonstrating how the AutoCompleteView control works with Tokens.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/AutoCompleteViewControl/FirstLookExample</CodeURL>
        </Example>
        <Example>
          <Name>RemoteSearch</Name>
          <Image>AutoCompleteView_RemoteSearch.png</Image>
          <DescriptionHeader>Remote Search</DescriptionHeader>
          <Description>Telerik UI for Xamarin RadAutoCompleteView can set its ItemsSourse at a later stage after the end user starts typing in the search field and text is changed.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/AutoCompleteViewControl/RemoteSearchExample</CodeURL>
        </Example>
        <Example>
          <Name>Configuration</Name>
          <Image>AutoCompleteView_Configuration.png</Image>
          <DescriptionHeader>Configuration</DescriptionHeader>
          <Description>This example presents various configuration options that the AutoCompleteView control provides.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/AutoCompleteViewControl/ConfigurationExample</CodeURL>
        </Example>
        <Example>
          <Name>Customization</Name>
          <Image>AutoCompleteView_Customization.png</Image>
          <DescriptionHeader>Customization</DescriptionHeader>
          <Description>This example presents how the AutoCompleteView control templates could be customized.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/AutoCompleteViewControl/CustomizationExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Barcode</Name>
      <Image>BarCode_BoardingPass.png</Image>
      <DescriptionHeader>Barcode</DescriptionHeader>
      <ShortDescription>RadBarcode is a UI component used for creating and showing 1D and 2D barcodes.</ShortDescription>
      <FullDescription>Telerik RadBarcode for Xamarin is a control used for creating and showing barcodes. You can generate and visualize barcodes in a machine-readable format via the RadBarcode control by providing numeric or character data.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/barcode/barcode-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>BoardingPass</Name>
          <Image>BarCode_BoardingPass.png</Image>
          <DescriptionHeader>Boarding Pass</DescriptionHeader>
          <Description>Telerik UI for Xamarin Barcode can generate a variety of 1D and 2D barcodes. This example demonstrates how RadBarcode can be used to display a 2D QR code inside a sample boarding pass page of an application.  The QR code system has become popular due to its fast readability and great storage capacity.  QR codes are often used in applications to encode links, map locations, contact cards and other data.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BarcodeControl/BoardingPassExample</CodeURL>
        </Example>
        <Example>
          <Name>SpecialOffer</Name>
          <Image>BarCode_SpecialOffer.png</Image>
          <DescriptionHeader>Special Offer</DescriptionHeader>
          <Description>In this example RadBarcode for Xamarin is used to generate a linear (1D) barcode in order to identify a discount coupon. With RadBarcode you can choose between several types of 1D and 2D barcode symbologies and have also control over the visual appearance and sizing of your barcodes. </Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BarcodeControl/SpecialOfferExample</CodeURL>
        </Example>
        <Example>
          <Name>QRCode</Name>
          <DisplayName>QR Code</DisplayName>
          <Image>BarCode_QRCode.png</Image>
          <DescriptionHeader>QR Code</DescriptionHeader>
          <Description>With RadBarcode you could generate the popular QRCode. This example demonstrates the available settings of the QRCode symbology.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BarcodeControl/QRCodeExample</CodeURL>
        </Example>
        <Example>
          <Name>PDF417</Name>
          <DisplayName>PDF417</DisplayName>
          <Image>BarCode_PDF417.png</Image>
          <DescriptionHeader>PDF417</DescriptionHeader>
          <Description>An example demonstrating the available settings of the PDF417 code symbology.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BarcodeControl/PDF417Example</CodeURL>
        </Example>
        <Example>
          <Name>Barcode1DGallery</Name>
          <DisplayName>1D Barcode Gallery</DisplayName>
          <Image>BarCode_1D.png</Image>
          <DescriptionHeader>1D Barcode Gallery</DescriptionHeader>
          <Description>This example demonstrates all the linear (1D) barcodes the RadBarcode could generate including the most popular ones such as EAN13, EAN8, UPC-A, UPC-E and Code39.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BarcodeControl/Barcode1DGalleryExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Border</Name>
      <Image>Border_FirstLook.png</Image>
      <DescriptionHeader>Border</DescriptionHeader>
      <ShortDescription>With Telerik RadBorder for Xamarin you will have full control over the look &amp; feel of the border that wraps around your Xamarin views.</ShortDescription>
      <FullDescription>With Telerik RadBorder for Xamarin you will have full control over the look &amp; feel of the border that wraps around your Xamarin views. You could surround any view such as Label, Image, so on and specify different border thickness and corner radius on each side.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/border/border-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>Border_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>This example shows how you could wrap RadBorder around different Views, such as Label and Image. In the case of the Image you could benefit from RadBorder's clipping functionality and have circular images and in the case of the Label you have different corner radius on the four angles.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BorderControl/FirstLookExample</CodeURL>
        </Example>
        <Example>
          <Name>Configuration</Name>
          <Image>Border_Configuration.png</Image>
          <DescriptionHeader>Configuration</DescriptionHeader>
          <Description>RadBorder provides a few useful properties for configuring its color, thickness and corner radius. This example lets you play with these properties and see the result right away.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BorderControl/ConfigurationExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>BusyIndicator</Name>
      <DisplayName>BusyIndicator</DisplayName>
      <Image>BusyIndicator_Gallery.png</Image>
      <DescriptionHeader>BusyIndicator</DescriptionHeader>
      <ShortDescription>RadBusyIndicator allows you to display a notification whenever a longer-running process is being handled by the application, thus making the user experience smoother.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin BusyIndicator enables you to display a notification whenever a longer-running process is being handled by the application. This makes the UI more informative and the user experience smoother.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/busyindicator/busyindicator-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>Theming</Name>
          <Image>BusyIndicator_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>An example demonstrating the Blue Theme of the BusyIndicator.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BusyIndicatorControl/ThemingExample</CodeURL>
        </Example>
        <Example>
          <Name>Gallery</Name>
          <Image>BusyIndicator_Gallery.png</Image>
          <DescriptionHeader>Gallery</DescriptionHeader>
          <Description>An example demonstrating the BusyIndicator.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BusyIndicatorControl/GalleryExample</CodeURL>
        </Example>
        <Example>
          <Name>CustomIndicator</Name>
          <Image>BusyIndicator_Custom_Indicator.png</Image>
          <DescriptionHeader>Custom Indicator</DescriptionHeader>
          <Description>An example demonstrating custom BusyIndicator.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BusyIndicatorControl/CustomIndicatorExample</CodeURL>
        </Example>
        <Example>
          <Name>CustomBusyContent</Name>
          <Image>BusyIndicator_CustomBusyContent.png</Image>
          <DescriptionHeader>Custom Busy Content</DescriptionHeader>
          <Description>An example demonstrating a BusyIndicator with custom busy content and a custom busy content template.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/BusyIndicatorControl/CustomBusyContentExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Button</Name>
      <Image>Button.png</Image>
      <DescriptionHeader>Button</DescriptionHeader>
      <ShortDescription>RadButton is a button control which enhances the standard Xamarin.Forms Button, by providing you full control over its visual appearance.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin Button is a button control which enhances the standard Xamarin Forms Button, by providing you full control over its visual appearance and adding support for our Theming mechanism. UI customization is possible through the provided themes, or you can add rotation, shapes, transparency, text, and backgrounds and images.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/button/button-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>Recipes</Name>
          <Image>Button.png</Image>
          <DescriptionHeader>Recipes</DescriptionHeader>
          <Description>An example demonstrating the Button.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ButtonControl/RecipesExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Calendar</Name>
      <DisplayName>Calendar &amp; Scheduling</DisplayName>
      <Image>Calendar_Appointments.png</Image>
      <DescriptionHeader>Calendar &amp; Scheduling</DescriptionHeader>
      <ShortDescription>RadCalendar extends native UI functionality and supports various view modes, selection, appointments, styling customizations.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin Calendar allows you to easily implement various calendar scenarios in your apps built with Xamarin or Xamarin.Forms. The control capitalizes on all the innate benefits of the native UI but exposes all objects and properties in C#, allowing for no-compromise customization and flexibility. It supports various view modes (year, month, week and more), selection, appointments, styling customizations.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/calendar/calendar-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>1</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>true</IsUpdated>
      <Examples>
        <Example>
          <Name>MonthView</Name>
          <DisplayName>Month View</DisplayName>
          <Image>Calendar_Appointments.png</Image>
          <DescriptionHeader>Month View</DescriptionHeader>
          <Description>The example demonstrates how the Calendar control displays dates of a month, showing how events information can be integrated in the Calendar cell's content. You can control the selection mode from the SideDrawer to show different events in the Agenda View</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/CalendarControl/MonthViewExample</CodeURL>
          <IsThemable>false</IsThemable>
        </Example>
        <Example>
          <Name>AppointmentTemplate</Name>
          <DisplayName>Appointment Template</DisplayName>
          <Image>Calendar_app_template.png</Image>
          <DescriptionHeader>Appointment Template</DescriptionHeader>
          <Description>This example demonstrates how to create fully customized appointments and display them in Day &amp; MultiDay views. </Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/CalendarControl/AppointmentTemaplateExample</CodeURL>
          <IsNew>true</IsNew>
        </Example>
        <Example>
          <Name>SpecialSlots</Name>
          <DisplayName>Special Slots</DisplayName>
          <Image>Calendar_SpecialSlots.png</Image>
          <DescriptionHeader>Special Slots</DescriptionHeader>
          <Description>This example demonstrates how specific slots of the Calendar could be visualized as special using the SpecialSlotsSource functionality. The SpecialSlotStyleSelector allows you to apply different look for the slots.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/CalendarControl/SpecialSlotsExample</CodeURL>
          <IsThemable>false</IsThemable>
          <IsNew>true</IsNew>
        </Example>
        <Example>
          <Name>DayView</Name>
          <DisplayName>Day View</DisplayName>
          <Image>Calendar_Day_View.png</Image>
          <DescriptionHeader>Day View</DescriptionHeader>
          <Description>Day view mode of RadCalendar with all day area, configurable time ruler and API allowing you to schedule appointments and achieve your scheduling functionality.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/CalendarControl/DayViewExample</CodeURL>
          <IsUpdated>true</IsUpdated>
        </Example>
        <Example>
          <Name>Scheduling</Name>
          <DisplayName>Scheduling</DisplayName>
          <Image>Calendar_AllViews.png</Image>
          <DescriptionHeader>Scheduling</DescriptionHeader>
          <Description>This example demonstrates the scheduling capabilities and some of the built-in view modes of the control. The end-user could easily switch the modes using the toolbar or using the UI provided in the SideDrawer control.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/CalendarControl/SchedulingExample</CodeURL>
          <IsThemable>false</IsThemable>
          <ExcludeFrom>UWP</ExcludeFrom>
        </Example>
        <Example>
          <Name>Theming</Name>
          <Image>Calendar_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>This example demonstrates the Blue theme, which is available for styling the control.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/CalendarControl/ThemingExample</CodeURL>
        </Example>
        <Example>
          <Name>MultiDayViewPeople</Name>
          <DisplayName>MultiDay View</DisplayName>
          <Image>Scheduler_Resources.png</Image>
          <DescriptionHeader>MultiDay View</DescriptionHeader>
          <Description>Demonstrates displaying the appointments of several people in multi-day view mode. The appointments are styled in such a way to help users quickly distinguish the person they refer to.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/CalendarControl/MultiDayViewPeopleExample</CodeURL>
        </Example>
        <Example>
          <Name>MultiDayViewConfiguration</Name>
          <DisplayName>MultiDay View Configuration</DisplayName>
          <Image>Scheduler_Configuration.png</Image>
          <DescriptionHeader>MultiDay View Configuration</DescriptionHeader>
          <Description>This example presents various configuration options such as day start and end times, timeline settings and weekend display, you could utilize to make the MultiDay view look the way you’d need.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/CalendarControl/MultiDayViewConfigurationExample</CodeURL>
          </Example>
        <Example>
          <Name>MultiDayViewAppointments</Name>
          <DisplayName>Add/Edit Appointments</DisplayName>
          <Image>Scheduler_Appointments.png</Image>
          <DescriptionHeader>Add/Edit Appointments</DescriptionHeader>
          <Description>This example demonstrates display and management of appointments in MultiDay view. The end-user could easily add and edit appointments by tapping on the timeslot/appointment respectively. Delete option is also available from the appointment edit page.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/CalendarControl/MultiDayViewAppointmentsExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Chart</Name>
      <Image>Chart_Bar_Series.png</Image>
      <DescriptionHeader>Chart</DescriptionHeader>
      <ShortDescription>RadChart is a feature-rich, intuitive and easy to use data visualization control which employs the Xamarin technology and allows you to build native iOS, Android and UWP apps in C#.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin Chart is a feature-rich, intuitive and easy to use data visualization control which employs the Xamarin.Forms technology and allows you to build native apps in C#. It supports various chart types (bar, line, area, candlestick, scatter and more), various axes types (categorical, numeric, date-time and more), selection, annotations, trackball, pan and zoom.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/chart/chart-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>4</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>Theming</Name>
          <Image>Chart_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>Demonstrates the theming capabilities of the chart.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ChartControl/ThemingExample</CodeURL>
        </Example>
        <Example>
          <Name>BarSeries</Name>
          <Image>Chart_Bar_Series.png</Image>
          <DescriptionHeader>Bar Series</DescriptionHeader>
          <Description>Bar chart is one of the most common type of graphs used to display data. Sometimes known as 'column charts' depending on the orientation, bar charts are used to visualize data points as bar blocks where the width/height of each bar denotes the magnitude of its value.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ChartControl/BarSeriesExample</CodeURL>
        </Example>
        <Example>
          <Name>LineSeries</Name>
          <Image>Chart_Line_Series.png</Image>
          <DescriptionHeader>Line Series</DescriptionHeader>
          <Description>Line charts are often used to plot changes in data over time, such as monthly temperature changes or daily changes in stock market prices. If you are plotting changes in data over time, time is plotted along the horizontal axis and your other data is plotted as individual points along the vertical axis.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ChartControl/LineSeriesExample</CodeURL>
        </Example>
        <Example>
          <Name>AreaSeries</Name>
          <Image>Chart_Area.png</Image>
          <DescriptionHeader>Area Series</DescriptionHeader>
          <Description>Area charts are much like line charts, but they display different colors in the areas below the lines. This colorful and visual display distinguishes the data more clearly. The Area charts support Stack, Stack100 and standard plotting modes.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ChartControl/AreaSeriesExample</CodeURL>
        </Example>
        <Example>
          <Name>ScatterSeries</Name>
          <Image>Chart_Scattered.png</Image>
          <DescriptionHeader>Scatter Series</DescriptionHeader>
          <Description>A scatter chart is a two-dimensional graphical representation of a set of data where each x/y variable is represented on the graph as a dot. This type of chart can be used in to visually describe relationships between two numerical parameters or to represent distributions.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ChartControl/ScatterSeriesExample</CodeURL>
        </Example>
        <Example>
          <Name>PieDonutSeries</Name>
          <DisplayName>Pie &amp; Donut Series</DisplayName>
          <Image>Chart_Pie.png</Image>
          <DescriptionHeader>Pie Donut Series</DescriptionHeader>
          <Description>The pie chart visualizes its data in the shape of a pie. Each data item is visually represented by a pie/donut slice. The ratio between the space consumed by each slice and the space consumed by the whole chart is the same as the ratio between the value of the data point that it represents and the total value of all data points in the series.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ChartControl/PieDonutSeriesExample</CodeURL>
        </Example>
        <Example>
          <Name>FinancialSeries</Name>
          <Image>Chart_Financial.png</Image>
          <DescriptionHeader>Financial Series</DescriptionHeader>
          <Description>The financial series are represented by the OhlcSeries and CandlestickSeries classes. They only differ in the way they visualize the data point. OHLC stands for Open, High, Low and Close.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ChartControl/FinancialSeriesExample</CodeURL>
        </Example>
        <Example>
          <Name>FinancialIndicators</Name>
          <Image>Chart_Financial_Indicators.png</Image>
          <DescriptionHeader>Financial Indicators</DescriptionHeader>
          <Description>The financial indicators are a collection of DataPoints (calculated with different algorithms using the series data) visualized using Line Shape.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ChartControl/FinancialIndicatorsExample</CodeURL>
        </Example>
        <Example>
          <Name>NullValues</Name>
          <Image>Chart_Null.png</Image>
          <DescriptionHeader>Null Values</DescriptionHeader>
          <Description>Line charts and area charts can visualize null values as gaps in the chart.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ChartControl/NullValuesExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>CheckBox</Name>
      <DisplayName>CheckBox</DisplayName>
      <Image>CheckBox_FirstLook.png</Image>
      <DescriptionHeader>Check Box</DescriptionHeader>
      <ShortDescription>RadCheckBox for Xamarin is a checkbox control which enables users to make a choice between two mutually exclusive options.</ShortDescription>
      <FullDescription>Telerik RadCheckBox for Xamarin is a checkbox control which enables users to make a choice between two mutually exclusive options. In addition, RadCheckBox provides indeterminate state which indicates the control is neither checked nor unchecked. RadCheckBox exposes various Color properties you could use to customize its visual appearance, so that it matches the look &amp; feel of your app.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/checkbox/checkbox-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>CheckBox_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>This example demonstrates how you could use a series of RadCheckBox controls, so that the end user may select several of the provided choices.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/CheckBoxControl/FirstLookExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>ConversationalUI</Name>
      <DisplayName>Conversational UI</DisplayName>
      <Image>ChatBot_Vacation.png</Image>
      <DescriptionHeader>ConversationalUI</DescriptionHeader>
      <ShortDescription>RadChat for Xamarin is a UI component that provides flexible API for achieving a variety of chat and chat-bot scenarios. </ShortDescription>
      <FullDescription>RadChat enables easy implementation of conversational UI in Xamarin applications, whether by utilizing certain chatbot framework, by following a predefined logical tree, or just for integrating P2P chat capabilities.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/chat/chat-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>5</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>TravelAssistance</Name>
          <DisplayName>Travel Assistance</DisplayName>
          <Image>ChatBot_Vacation.png</Image>
          <DescriptionHeader>Travel Assistance</DescriptionHeader>
          <Description>This example demonstrates a possible implementation of the RadChat control for a travel agency by integrating it with the Microsoft Bot Framework via Azure Bot Service.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ConversationalUIControl/TravelAssistanceExample</CodeURL>
        </Example>
        <Example>
          <Name>InsuranceAssistance</Name>
          <DisplayName>Insurance Assistance</DisplayName>
          <Image>ChatBot_Insurance.png</Image>
          <DescriptionHeader>Insurance Assistance</DescriptionHeader>
          <Description>This example demonstrates a possible implementation of the RadChat control for a car insurance company by integrating it with Google’s DialogFlow framework.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ConversationalUIControl/InsuranceAssistanceExample</CodeURL>
        </Example>
        <Example>
          <Name>HealthCareAssistance</Name>
          <DisplayName>Healthcare Assistance</DisplayName>
          <Image>ChatBot_HealthCare.png</Image>
          <DescriptionHeader>Healthcare Assistance</DescriptionHeader>
          <Description>This example demonstrates a possible implementation of the RadChat control for a health insurance company by integrating it with the Microsoft Bot Framework via Azure Bot Service.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ConversationalUIControl/HealthCareAssistanceExample</CodeURL>
        </Example>
        <Example>
          <Name>ChatRoom</Name>
          <DisplayName>Chat Room</DisplayName>
          <Image>Chat_Chatroom.png</Image>
          <DescriptionHeader>Chat Room</DescriptionHeader>
          <Description>This example demonstrates one way to go about implementing a chat room with multiple participants. Some of the features that are demonstrated are: typing indicator, timebreaks, color customization, MVVM support.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ConversationalUIControl/ChatRoomExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>DataForm</Name>
      <DisplayName>DataForm</DisplayName>
      <Image>DataForm_Theming.png</Image>
      <DescriptionHeader>DataForm</DescriptionHeader>
      <ShortDescription>RadDataForm is a customizable component that allows you to easily create a form for collecting data and provides different validation and commit modes.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin DataForm allows for easy building of a data fill-in form from a single shared codebase. The control detects the types of the data object’s properties and automatically displays the appropriate editors. It provides a set of built-in editors for the available primitive types such as numeric, string, Boolean and enumerations. You can also provide your own custom editor and implement it easily thanks to the rich API of the control.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/dataform/dataform-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>8</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>Reservations</Name>
          <Image>DataForm_Reservations.png</Image>
          <DescriptionHeader>Reservations</DescriptionHeader>
          <Description>Demonstrates the most important set of features in DataForm.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/DataFormControl/ReservationsExample</CodeURL>
          <ExcludeFrom>UWP</ExcludeFrom>
        </Example>
        <Example>
          <Name>Theming</Name>
          <Image>DataForm_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>Demonstrates the theming of the DataForm.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/DataFormControl/ThemingExample</CodeURL>
        </Example>
        <Example>
          <Name>Globalization</Name>
          <DisplayName>Localization &amp; Globalization</DisplayName>
          <Image>DataForm_Globalization.png</Image>
          <DescriptionHeader>Localization &amp; Globalization</DescriptionHeader>
          <Description>Demonstrates how to set up the globalization of the DataForm.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/DataFormControl/GlobalizationExample</CodeURL>
          </Example>
      </Examples>
    </Control>
    <Control>
      <Name>DataGrid</Name>
      <DisplayName>DataGrid</DisplayName>
      <Image>DataGrid_FirstLook.png</Image>
      <DescriptionHeader>DataGrid</DescriptionHeader>
      <ShortDescription>RadDataGrid is a powerful and feature rich control that allows you to easily visualize and edit tabular represented data in your apps.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin DataGrid is a powerful and feature rich control that allows you to easily visualize and edit tabular represented data. The control provides the ability to easily perform operations like sorting, filtering, grouping and editing over the underlying data.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/datagrid/datagrid-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>7</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>DataGrid_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Demonstrates how you can easily configure the DataGrid to display data and perform selection and editing on it.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/DataGridControl/FirstLookExample</CodeURL>
        </Example>
        <Example>
          <Name>Theming</Name>
          <Image>DataGrid_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>Demonstrates how the DataGrid could easily be styled using the built-in Blue theme.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/DataGridControl/ThemingExample</CodeURL>
        </Example>
        <Example>
          <Name>Customization</Name>
          <Image>DataGrid_Customization.png</Image>
          <DescriptionHeader>Customization</DescriptionHeader>
          <Description>Demonstrates how you could customize the visual appearance of the DataGrid control through various Style and StyleSelector properties such as RowBackgroundStyle, AlternateRowBackgroundStyle, SelectionStyle, GroupHeaderStyleSelector, etc.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/DataGridControl/CustomizationExample</CodeURL>
        </Example>
        <Example>
          <Name>LoadOnDemand</Name>
          <Image>DataGrid_LoadOnDemand.png</Image>
          <DescriptionHeader>Load On Demand</DescriptionHeader>
          <Description>Loading a large data set on a mobile device has its challenges. One of the most popular approaches is using incremental data loading in the moment the items need to be visualized. This example demonstrates how you could utilize the LoadOnDemand feature of RadDataGrid to load the data items when the "Load More" button is activated. Additionally, RadDataGrid offers automatic LoadOnDemand mode in which the items are loaded once you scroll near to the last available record.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/DataGridControl/LoadOnDemandExample</CodeURL>
        </Example>
        <Example>
          <Name>CRUDOperations</Name>
          <DisplayName>CRUD Operations</DisplayName>
          <Image>DataGrid_CRUD.png</Image>
          <DescriptionHeader>CRUD Operations</DescriptionHeader>
          <Description>An example that shows the DataGrid's CRUD capabilities such as addition, deletion and editting.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/DataGridControl/CRUDOperationsExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>DockLayout</Name>
      <DisplayName>DockLayout</DisplayName>
      <Image>DockPanel_Configuration.png</Image>
      <DescriptionHeader>DockLayout</DescriptionHeader>
      <ShortDescription>RadDockLayout is a layout that provides a mechanism for child elements to be docked to the left, right, top or bottom edge or to occupy the center area of the layout.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin DockLayout is a layout that provides a mechanism for child elements to be docked to the left, right, top or bottom edge of the layout. You could easily define the docking side of each element through a RadDockLayout.Dock attached property. In addition, you can determine whether the last child element inside the layout will occupy the remaining available space.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/docklayout/docklayout-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>DockPanel_Configuration.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Demonstrates how you can easily configure the DockLayout.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/DockLayoutControl/FirstLookExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Entry</Name>
      <Image>Entry_FirstLook.png</Image>
      <DescriptionHeader>Entry</DescriptionHeader>
      <ShortDescription>RadEntry is a text input control, which accepts string input from the users and provides means for customizing its look &amp; feel.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin Entry is a text input control, which accepts string input from the users and provides consistent look and feel with the rest of the Telerik UI for Xamarin components through innovative theming mechanism, including customization of the borders of the Entry.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/entry/entry-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>Entry_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Demonstrates how you could utilize the key features of RadEntry such as watermark support and border styling to achieve slick design across all platforms.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/EntryControl/FirstLookExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Expander</Name>
      <Image>Expander_FirstLook.png</Image>
      <DescriptionHeader>Expander</DescriptionHeader>
      <ShortDescription>RadExpander for Xamarin helps you save screen space by presenting content in an expandable container that can be easily expanded/collapsed.</ShortDescription>
      <FullDescription>Telerik Expander for Xamarin helps you save screen space by presenting content in an expandable container that can be easily expanded/collapsed by tapping on the header of the control.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/expander/expander-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>Expander_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Demonstrates basic setup of RadExpander for presenting content in an expandable container.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>true</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ExpanderControl/FirstLookExample</CodeURL>
        </Example>
        <Example>
          <Name>Customization</Name>
          <Image>Expander_Customization.png</Image>
          <DescriptionHeader>Customization</DescriptionHeader>
          <Description>Demonstrates how you could customize the RadExpander to achieve slick design across all platforms.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ExpanderControl/CustomizationExample</CodeURL>
        </Example>
        <Example>
          <Name>Configuration</Name>
          <Image>Expander_Configuration.png</Image>
          <DescriptionHeader>Configuration</DescriptionHeader>
          <Description>This example presents various configuration options you could use to make the Expander control look and animate per your choice.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ExpanderControl/ConfigurationExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Gauge</Name>
      <Image>Gauge_Customization.png</Image>
      <DescriptionHeader>Gauge</DescriptionHeader>
      <ShortDescription>RadGauge serves as an instrument that indicates and gives a visual display of amount, level, or content of something. These values are presented via indicators (needles, arrows, and others).</ShortDescription>
      <FullDescription>Telerik UI for Xamarin Gauge is an essential data visualization component that uses indicators to display numeric values, and uses ranges to give a context to the indicated values.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/gauge/gauge-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>Customization</Name>
          <Image>Gauge_Customization.png</Image>
          <DescriptionHeader>Customization</DescriptionHeader>
          <Description>Demonstrates the customization of the Gauge.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/GaugeControl/CustomizationExample</CodeURL>
        </Example>
        <Example>
          <Name>ActivityDashboard</Name>
          <Image>Gauge_Activity_Dashboard.png</Image>
          <DescriptionHeader>Activity Dashboard</DescriptionHeader>
          <Description>Demonstrates the Gauge and some of the built-in indicators.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/GaugeControl/ActivityDashboardExample</CodeURL>
        </Example>
        <Example>
          <Name>RadialGaugeGallery</Name>
          <Image>Gauge_Gallery_Radial.png</Image>
          <DescriptionHeader>Radial Gauge Gallery</DescriptionHeader>
          <Description>Demonstrates some of the built-in features of the gauge.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/GaugeControl/RadialGaugeGalleryExample</CodeURL>
        </Example>
        <Example>
          <Name>VerticalGaugeGallery</Name>
          <Image>Gauge_Gallery_Vertical.png</Image>
          <DescriptionHeader>Vertical Gauge Gallery</DescriptionHeader>
          <Description>Demonstrates some of the built-in features of the gauge.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/GaugeControl/VerticalGaugeGalleryExample</CodeURL>
        </Example>
        <Example>
          <Name>HorizontalGaugeGallery</Name>
          <Image>Gauge_Gallery_Horizontal.png</Image>
          <DescriptionHeader>Horizontal Gauge Gallery</DescriptionHeader>
          <Description>Demonstrates some of the built-in features of the gauge.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/GaugeControl/HorizontalGaugeGalleryExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>ImageEditor</Name>
      <DisplayName>ImageEditor</DisplayName>
      <Image>ImageEditor_FirstLook.png</Image>
      <DescriptionHeader>ImageEditor</DescriptionHeader>
      <ShortDescription>ImageEditor is a component that enables you to easily visualize and edit images in different file formats in your mobile application.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin ImageEditor is a component that enables you to easily visualize and edit images in different file formats in your mobile application. As an addition to the RadImageEditor control you can use an UI - RadImageEditorToolbar. This UI includes all editing capabilities of the control and it could be easily customized.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/imageeditor/imageeditor-overview</DocumentationURL>
      <Latest>2</Latest>
      <Featured>3</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>true</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>ImageEditor_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Demonstrates the built-in image editing capabilities of the ImageEditor component.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ImageEditorControl/FirstLookExample</CodeURL>
          <IsUpdated>true</IsUpdated>
        </Example>
        <Example>
          <Name>CustomToolbar</Name>
          <Image>ImageEditor_CustomToolbar.png</Image>
          <DescriptionHeader>Custom Toolbar</DescriptionHeader>
          <Description>Demonstrates the customization capabilities of the built-in toolbar for the ImageEditor component.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ImageEditorControl/CustomToolbarExample</CodeURL>
          <IsNew>true</IsNew>
          </Example>
      </Examples>
    </Control>
    <Control>
      <Name>ListView</Name>
      <DisplayName>ListView</DisplayName>
      <Image>ListView_Layouts.png</Image>
      <DescriptionHeader>ListView</DescriptionHeader>
      <ShortDescription>RadListView is a virtualizing list component that provides the most popular features associated with scenarios where a list of items is used.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin ListView is a virtualized high-performance list component that provides the most popular features associated with scenarios where a list of items is used. All these features are embedded in one control with the idea to save developer time and provide better experience. The control's features include different layouts, pull-to-refresh, grouping, displaying actionable buttons on item swipe, changing the items order by a drag and drop operation.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/listview/listview-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>6</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>Selection</Name>
          <Image>ListView_Selection.png</Image>
          <DescriptionHeader>Selection</DescriptionHeader>
          <Description>The ListView selection feature allows the end-user to select one or multiple items. The items can also be swiped left or right which reveals actionable buttons which the end-user can tap to execute some tasks.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ListViewControl/SelectionExample</CodeURL>
        </Example>
        <Example>
          <Name>Layouts</Name>
          <Image>ListView_Layouts.png</Image>
          <DescriptionHeader>Layouts</DescriptionHeader>
          <Description>Demonstrates the different layouts that the ListView supports - linear layout where there is one item per row and grid layout where you define how many items there should be per row.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ListViewControl/LayoutsExample</CodeURL>
        </Example>
        <Example>
          <Name>Reorder</Name>
          <Image>ListView_Reorder.png</Image>
          <DescriptionHeader>Reorder</DescriptionHeader>
          <Description>Demonstrates how the end-user can reorder items by a drag and drop operation.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ListViewControl/ReorderExample</CodeURL>
        </Example>
        <Example>
          <Name>Theming</Name>
          <Image>ListView_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>Demonstrates the Blue theme, which is available for styling the control.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ListViewControl/ThemingExample</CodeURL>
        </Example>
        <Example>
          <Name>HeaderFooter</Name>
          <DisplayName>Header &amp; Footer</DisplayName>
          <Image>ListView_HeaderFooter.png</Image>
          <DescriptionHeader>Header &amp; Footer</DescriptionHeader>
          <Description>Demonstrates a ListView with header and footer templates. Scroll down to reveal the footer.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ListViewControl/HeaderFooterExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>PdfViewer</Name>
      <DisplayName>PdfViewer</DisplayName>
      <Image>PdfViewer_FirstLook.png</Image>
      <DescriptionHeader>PdfViewer</DescriptionHeader>
      <ShortDescription>RadPdfViewer is a control that can visualize PDF documents straight into your application.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin PdfViewer is a control that can visualize PDF documents straight into your application. It has been made more than simple with the exposed commands that can be easily bound to and the full integration with the RadPdfViewerToolbar.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/pdfviewer/pdfviewer-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>2</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>true</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>PdfViewer_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>An example that demonstrates how the PdfViewer can easily visualize an embedded into your application PDF document and the flawless integration with the PdfViewerToolbar.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/PdfViewerControl/FirstLookExample</CodeURL>
          <IsUpdated>true</IsUpdated>
        </Example>
        <Example>
          <Name>Customization</Name>
          <Image>PdfViewer_Customization.png</Image>
          <DescriptionHeader>Customization</DescriptionHeader>
          <Description>This example demonstrates how the look &amp; feel of the PdfViewer selection and toolbar can be easily customized by changing their color, alignment and items position.</Description>
          <IsThemable>false</IsThemable>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/PdfViewerControl/CustomizationExample</CodeURL>
          <IsNew>true</IsNew>
        </Example>
        <Example>
          <Name>LargeFile</Name>
          <Image>PdfViewer_LargeFile.png</Image>
          <DescriptionHeader>Large file</DescriptionHeader>
          <Description>A demonstration of the read-on-demand feature that allows to quickly open large files. This is done by not loading the whole document initially, but a page is loaded on demand, only when it enters the viewable area.</Description>
          <IsScenario>false</IsScenario>
          <IsNew>true</IsNew>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/PdfViewerControl/LargeFileExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>PdfProcessing</Name>
      <DisplayName>PdfProcessing</DisplayName>
      <Image>PdfProcessing_FirstLook.png</Image>
      <DescriptionHeader>PdfProcessing</DescriptionHeader>
      <ShortDescription>RadPdfProcessing is a processing library that allows creation, import and export of PDF documents. </ShortDescription>
      <FullDescription>The API of RadPdfProcessing contains two different editors, enabling you to choose between editing in a flow-like manner, or using the much more powerful and flexible fixed document structure and drawing on the page.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/document-processing/libraries/radpdfprocessing/overview</DocumentationURL>
      <Latest>4</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>PdfProcessing_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Telerik RadPdfProcessing provides easy to use API which allows code-only generation of PDF documents. This example demonstrates how to create a document containing images, text and shapes and export it to PDF.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/PdfProcessingControl/FirstLookExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Popup</Name>
      <DisplayName>Popup</DisplayName>
      <Image>Popup_ContextMenu.png</Image>
      <DescriptionHeader>Popup</DescriptionHeader>
      <ShortDescription>With RadPopup you could easily add modal popups to your application in order to draw attention to important information or receive user input.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin Popup lets you display content of your choice on top of existing view. You could define whether the Popup will be modal or not as well as control its position through various placement settings.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/popup/popup-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>ContextMenu</Name>
          <Image>Popup_ContextMenu.png</Image>
          <DescriptionHeader>Context Menu</DescriptionHeader>
          <Description>This example demonstrates how you could use RadPopup control as a context menu - you can host any content inside the Popup and easily position it according to the target element.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/PopupControl/ContextMenuExample</CodeURL>
        </Example>
        <Example>
          <Name>Modal</Name>
          <Image>Popup_Modal.png</Image>
          <DescriptionHeader>Modal</DescriptionHeader>
          <Description>This example demonstrates how you could use RadPopup as a modal, so that the UI behind it gets inactive and cannot be used until the Popup is closed.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/PopupControl/ModalExample</CodeURL>
        </Example>
        <Example>
          <Name>Configuration</Name>
          <Image>Popup_Configuration.png</Image>
          <DescriptionHeader>Configuration</DescriptionHeader>
          <Description>This example presents various configuration options that the Popup control provides.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/PopupControl/ConfigurationExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>TreeView</Name>
      <DisplayName>TreeView</DisplayName>
      <Image>TreeView_FirstLook.png</Image>
      <DescriptionHeader>TreeView</DescriptionHeader>
      <ShortDescription>RadTreeView facilitates display, management, and navigation of hierarchical data structures. The product offers many advanced features like commands mechanism, data binding, checkbox support. </ShortDescription>
      <FullDescription>RadTreeView facilitates display, management, and navigation of hierarchical data structures. The product offers many advanced features like commands mechanism, data binding, checkbox support. RadTreeView allows you to achieve complex behavior and nicely blends into the interface of your application.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/treeview/treeview-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>TreeView_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Demonstrates how the RadTreeView component can be used within your application.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/TreeViewControl/FirstLookExample</CodeURL>
        </Example>
        <Example>
          <Name>Customization</Name>
          <Image>TreeView_Customization.png</Image>
          <DescriptionHeader>Customization</DescriptionHeader>
          <Description>This example demonstrates how to modify the look &amp; feel of RadTreeView items by defining separate ItemTemplates for different item types.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>true</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/TreeViewControl/CustomizationExample</CodeURL>
        </Example>
        <Example>
          <Name>LoadOnDemand</Name>
          <Image>TreeView_LoadOnDemand.png</Image>
          <DescriptionHeader>Load On Demand</DescriptionHeader>
          <Description>Demonstrates how you could utilize Load On Demand feature in order to delay the population of RadTreeView and load subitems only when they’re requested, thus improving the performance of your app.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/TreeViewControl/LoadOnDemandExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Map</Name>
      <DisplayName>Map</DisplayName>
      <Image>Map_FirstLook.png</Image>
      <DescriptionHeader>Map</DescriptionHeader>
      <ShortDescription>RadMap is a control that can visualize stunning map overlays through ESRI Shapefiles straight into your application.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin Map lets you display stunning map overlays using ESRI Shapefiles. The control provides support for labels, multiple, single selection and powerful customization APIs.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/map/map-overview</DocumentationURL>
      <Latest>3</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>Map_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>An example that demonstrates how the Map can easily visualize an embedded into your application ESRI Shapefile.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/MapControl/FirstLookExample</CodeURL>
        </Example>
        <Example>
          <Name>HotelFloorPlan</Name>
          <Image>Map_HotelFloorPlan.png</Image>
          <DescriptionHeader>Hotel Floor Plan</DescriptionHeader>
          <Description>This example demonstrates the usage of custom shapefile to represent hotel floor plan and allows you to interact with it.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/MapControl/HotelFloorPlanExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>MaskedInput</Name>
      <DisplayName>MaskedInput</DisplayName>
      <Image>MaskedInput_FirstLook.png</Image>
      <DescriptionHeader>MaskedInput</DescriptionHeader>
      <ShortDescription>RadMaskedInput allows to control the data input within your Xamarin.Forms app. It enhances the functionality of the Entry control by adding input validation and custom masks.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin MaskedInput allows you to controll data input in your applications. They enhance the functionality of an Entry by adding input validation and masks, such as E-mail, IP Address, SSN, phone number, digits, letters and symbols.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/maskedinput/maskedinput-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>MaskedInput_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Demonstrates the RadMaskedInput.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/MaskedInputControl/FirstLookExample</CodeURL>
        </Example>
        <Example>
          <Name>Theming</Name>
          <Image>MaskedInput_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>Demonstrates the theming of the RadMaskedInput.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/MaskedInputControl/ThemingExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>NumericInput</Name>
      <DisplayName>NumericInput</DisplayName>
      <Image>NumericInput_FirstLook.png</Image>
      <DescriptionHeader>NumericInput</DescriptionHeader>
      <ShortDescription>RadNumericInput is a customizable input control for numeric data. It allows the user to edit a number using the decrease and increase buttons or directly enter it in the input.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin NumericInput is a highly customizable input control for numeric data. It allows the user to set/edit a number using the decrease and increase buttons or directly enter it in the input field.  RadNumericInput also provides consistent look with the rest of the controls from the Telerik UI for Xamarin suite.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/numericinput/numericinput-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>NumericInput_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Demonstrates how you could use RadNumericInput to enable the end users easily enter numeric data and to achieve slick design across all platforms.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/NumericInputControl/FirstLookExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Path</Name>
      <Image>Path_Figures.png</Image>
      <DescriptionHeader>Path</DescriptionHeader>
      <ShortDescription>RadPath is a control which can be used to draw complex shapes that are composed of different geometries like arcs, ellipses, lines and rectangles.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin Path is a control which can be used to draw complex shapes that can be composed of different geometries like arcs, ellipses, lines and rectangles.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/path/path-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>Figures</Name>
          <Image>Path_Figures.png</Image>
          <DescriptionHeader>Figures</DescriptionHeader>
          <Description>Demonstrates RadPath elements with different figures.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/PathControl/FiguresExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Rating</Name>
      <Image>Rating_RestaurantReview.png</Image>
      <DescriptionHeader>Rating</DescriptionHeader>
      <ShortDescription>RadRating is UI component that allows users to intuitively rate by selecting number of items [stars] from a predefined number of items.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin Rating is a flexible UI component that allows users to intuitively rate by making a selection.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/rating/rating-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>RestaurantReview</Name>
          <Image>Rating_RestaurantReview.png</Image>
          <DescriptionHeader>Restaurant Review</DescriptionHeader>
          <Description>Demonstrates integration between RadRating and RadGauge components.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/RatingControl/RestaurantReviewExample</CodeURL>
        </Example>
        <Example>
          <Name>Theming</Name>
          <Image>Rating_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>Demonstrates Blue theme applied on RadRating.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/RatingControl/ThemingExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>Segmented</Name>
      <Image>Segmented_FirstLook.png</Image>
      <DescriptionHeader>SegmentedControl</DescriptionHeader>
      <ShortDescription>RadSegmentedControl allows you to display a list of horizontally aligned, mutually exclusive options, which can be selected by the user. Each option can be presented with a text or an image.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin Segmented control enables you to display several options in a convenient picker and select value with a single tap.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/segmentedcontrol/segmentedcontrol-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>Segmented_FirstLook.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Demonstrates the most important set of features of SegmentedControl.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/SegmentedControl/FirstLookExample</CodeURL>
        </Example>
        <Example>
          <Name>Theming</Name>
          <Image>Segmented_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>Demonstrates Blue theme applied on SegmentedControl.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/SegmentedControl/ThemingExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>SideDrawer</Name>
      <DisplayName>SideDrawer</DisplayName>
      <Image>SideDrawer_Recipes.png</Image>
      <DescriptionHeader>SideDrawer</DescriptionHeader>
      <ShortDescription>RadSideDrawer component is designed to enable users to visualize a hidden view in their applications. That view can host navigation UI, common setting or any other UI typical for a View.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin SideDrawer extends the popular slide-out design pattern which is mainly associated with navigational purposes. The control allows developers to embed any content inside the sliding panel from text and icons to sliders and filters. The control is highly customizable and slides in from all four sides of the screen. Various effects and transition modes come out of the box, including Push, Reveal, Reverse Slide Out, Slide Along, Slide In On Top, Scale Up, Fade In.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/sidedrawer/sidedrawer-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>Recipes</Name>
          <Image>SideDrawer_Recipes.png</Image>
          <DescriptionHeader>Recipes</DescriptionHeader>
          <Description>Demonstrates a real-world scenario where the SideDrawer control can come in handy. Thanks to the flexible API you can customize the SideDrawer to match the look and feel of your application.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/SideDrawerControl/RecipesExample</CodeURL>
        </Example>
        <Example>
          <Name>Settings</Name>
          <Image>SideDrawer_Settings.png</Image>
          <DescriptionHeader>Settings</DescriptionHeader>
          <Description>The Telerik SideDrawer can display any type of content and can be opened from any edge of the screen. Further customization can be achieved through the predefined open/close animations.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/SideDrawerControl/SettingsExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>SlideView</Name>
      <DisplayName>SlideView</DisplayName>
      <Image>SlideView_SlidingImages.png</Image>
      <DescriptionHeader>SlideView</DescriptionHeader>
      <ShortDescription>RadSlideView is a flexible navigation control that allows you to slide between different views, thus providing an interactive navigation.</ShortDescription>
      <FullDescription>From stock tickers and news scrollers, to product spotlights, the Telerik UI for Xamarin SlideView control delivers high interactivity and user involvement. It allows extensive customizations in terms of functionality and appearance.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/slideview/slideview-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>SlidingImages</Name>
          <Image>SlideView_SlidingImages.png</Image>
          <DescriptionHeader>Sliding Images</DescriptionHeader>
          <Description>From stock tickers and news scrollers, to product spotlights, the SlideView control delivers high interactivity and user involvement. It allows extensive customizations in terms of functionality and appearance.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/SlideViewControl/SlidingImagesExample</CodeURL>
        </Example>
        <Example>
          <Name>Theming</Name>
          <Image>SlideView_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>Demonstrates the theming of the SlideView.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/SlideViewControl/ThemingExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>SpreadStreamProcessing</Name>
      <DisplayName>SpreadStreamProcessing</DisplayName>
      <Image>SpreadStreamProcessing.png</Image>
      <DescriptionHeader>SpreadStreamProcessing</DescriptionHeader>
      <ShortDescription>RadSpreadStreamProcessing is a document processing paradigm that allows you to create big spreadsheet documents with great performance and minimal memory footprint.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin SpreadStreamProcessing is a document processing library which allows you to create big spreadsheet documents with great performance and minimal memory footprint.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/spreadstreamprocessing/overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>GenerateSpreadsheet</Name>
          <Image>SpreadStreamProcessing.png</Image>
          <DescriptionHeader>Generate Spreadsheet</DescriptionHeader>
          <Description>An example demonstrating generating spreadsheet document using SpreadStreamProcessing library.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/SpreadStreamProcessingControl/GenerateSpreadsheetExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>TabView</Name>
      <DisplayName>TabView</DisplayName>
      <Image>TabView_RestaurantMenu.png</Image>
      <DescriptionHeader>TabView</DescriptionHeader>
      <ShortDescription>RadTabView is a flexible navigation control that allows you to build tabbed interfaces. Each tabview item has an associated content displayed on selection.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin TabView is a flexible navigation control that allows you to build tabbed interfaces. Each tabview item has an associated content displayed on selection.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/tabview/tabview-overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <Examples>
        <Example>
          <Name>RestaurantMenu</Name>
          <Image>TabView_RestaurantMenu.png</Image>
          <DescriptionHeader>Restaurant Menu</DescriptionHeader>
          <Description>Demonstrates the main functionality of the TabView.</Description>
          <IsScenario>false</IsScenario>
          <IsThemable>false</IsThemable>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/TabViewControl/RestaurantMenuExample</CodeURL>
        </Example>
        <Example>
          <Name>Theming</Name>
          <Image>TabView_Theming.png</Image>
          <DescriptionHeader>Theming</DescriptionHeader>
          <Description>Demonstrates the theming of the TabView.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/TabViewControl/ThemingExample</CodeURL>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>WordsProcessing</Name>
      <DisplayName>WordsProcessing</DisplayName>
      <Image>WordsProcessing_FirstLook_Example.png</Image>
      <DescriptionHeader>WordsProcessing</DescriptionHeader>
      <ShortDescription>RadWordsProcessing is a processing library that allows creation, import and export of DOCX documents. </ShortDescription>
      <FullDescription>Telerik RadWordsProcessing is a processing library that allows code-only generation of documents. Through the API you can create a document from scratch and export it to one of the supported formats – Docx, Rtf, Html, PDF and Txt.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/wordsprocessing/overview</DocumentationURL>
      <Latest>1</Latest>
      <Featured>0</Featured>
      <IsNew>true</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Image>WordsProcessing_FirstLook_Example.png</Image>
          <DescriptionHeader>First Look</DescriptionHeader>
          <Description>Telerik RadWordProcessing provides easy to use API which allows code-only generation of DOCX documents. This example demonstrates how to create a document containing images, text and shapes and export it to DOCX, RTF, HTML, TXT.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/WordsProcessingControl/FirstLookExample</CodeURL>
          <IsNew>true</IsNew>
        </Example>
        <Example>
          <Name>Export</Name>
          <Image>WordsProcessing_Export.png</Image>
          <DescriptionHeader>Export</DescriptionHeader>
          <Description>This example demonstrates export of flow documents to PDF, RTF, HTML and TXT using RadWordsProcessing. You can use the imported Word(docx) sample and convert it to PDF, RTF, HTML, TXT.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/WordsProcessingControl/ExportExample</CodeURL>
          <IsNew>true</IsNew>
        </Example>
        <Example>
          <Name>FindAndReplace</Name>
          <DisplayName>Find &amp; Replace</DisplayName>
          <Image>WordsProcessing_FindReplace.png</Image>
          <DescriptionHeader>Find &amp; Replace</DescriptionHeader>
          <Description>This example illustrates the Replace functionality in RadWordsProcessing. You can replace or highlight text in the sample document, using regular expressions or strings and then export the document to view the result.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/WordsProcessingControl/FindAndReplaceExample</CodeURL>
          <IsNew>true</IsNew>
        </Example>
      </Examples>
    </Control>
    <Control>
      <Name>ZipLibrary</Name>
      <DisplayName>ZipLibrary</DisplayName>
      <Image>Zip_Library.png</Image>
      <DescriptionHeader>ZipLibrary</DescriptionHeader>
      <ShortDescription>RadZipLibrary allows you to compress data like images, docx or pdf files and send them over the wire, thus achieving fast and secure transactions.</ShortDescription>
      <FullDescription>Telerik UI for Xamarin ZipLibrary provides easy-to-use API to both create and load zip files as well as browse the contents of a zip file previously created. The API supports password protection and different compression levels. You can also create ZIP files in memory or add data to ZIP file from stream.</FullDescription>
      <DocumentationURL>https://docs.telerik.com/devtools/xamarin/controls/ziplibrary/overview</DocumentationURL>
      <Latest>0</Latest>
      <Featured>0</Featured>
      <IsNew>false</IsNew>
      <IsCTP>false</IsCTP>
      <IsBeta>false</IsBeta>
      <IsUpdated>false</IsUpdated>
      <IsThemable>false</IsThemable>
      <Examples>
        <Example>
          <Name>CreateArchive</Name>
          <Image>Zip_Library.png</Image>
          <DescriptionHeader>Create Archive</DescriptionHeader>
          <Description>An example demonstrating creating zip archive using ZipLibrary.</Description>
          <IsScenario>false</IsScenario>
          <CodeURL>https://github.com/telerik/telerik-xamarin-forms-samples/tree/master/_Samples%20Application/QSF/Examples/ZipLibraryControl/CreateArchiveExample</CodeURL>
        </Example>
      </Examples>
    </Control>
  </Controls>
  <Themes>
    <Theme>
      <Name>Default</Name>
      <Color1>#DC3D4D</Color1>
      <Color2>#425EF5</Color2>
      <Color3>#F4B943</Color3>
    </Theme>
    <Theme>
      <Name>Blue</Name>
      <ResourceTypeName>BlueResources</ResourceTypeName>
      <Color1>#425EF5</Color1>
      <Color2>#354BC4</Color2>
      <Color3>#5EBAF9</Color3>
    </Theme>
  </Themes>
</QSFConfiguration>
