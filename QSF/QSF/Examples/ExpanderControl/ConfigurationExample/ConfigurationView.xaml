<?xml version="1.0" encoding="UTF-8"?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:QSF.Examples.ExpanderControl.ConfigurationExample"
             xmlns:primitives="clr-namespace:Telerik.XamarinForms.Primitives;assembly=Telerik.XamarinForms.Primitives"
             xmlns:effects="clr-namespace:QSF.Effects"
             xmlns:converters="clr-namespace:QSF.Converters"
             x:Class="QSF.Examples.ExpanderControl.ConfigurationExample.ConfigurationView">
    <ContentView.Resources>
        <ResourceDictionary>
            <Style x:Key="SliderMinMaxLabelStyle" TargetType="Label" BasedOn="{StaticResource BodyLabelStyle}">
                <Setter Property="TextColor" Value="#b4b4b5" />
                <Setter Property="FontSize" Value="14" />
            </Style>

            <Style x:Key="DefaultLabelStyle" TargetType="Label" BasedOn="{StaticResource BodyLabelStyle}">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="TextColor" Value="#4b4c4c" />
            </Style>

            <Style x:Key="PropertyNameLabelStyle" TargetType="Label" BasedOn="{StaticResource BodyLabelStyle}">
                <Setter Property="Margin" Value="2, 20, 0, -5" />
            </Style>

            <Style x:Key="IconLabelStyle" TargetType="Label">
                <Setter Property="Margin" Value="3, 0, 0, 0" />
                <Setter Property="FontFamily" Value="{StaticResource IconsFont}" />
            </Style>

            <local:NameToColorConverter x:Key="NameToColorConverter" />
            <local:NameToEasingConverter x:Key="NameToEasingConverter" />
            <local:NameToIndicatorTextConverter x:Key="NameToIndicatorTextConverter" />
            <converters:DoubleRoundConverter x:Key="DoubleRoundConverter" />
        </ResourceDictionary>
    </ContentView.Resources>

    <ContentView.BindingContext>
        <local:ConfigurationViewModel />
    </ContentView.BindingContext>

    <StackLayout>
        <primitives:RadExpander IsExpanded="{Binding Path=IsExpanded}"
                                BorderColor="{Binding Path=BorderColor}"
                                BorderThickness="{Binding Path=BorderThickness}"
                                IsAnimationEnabled="{Binding Path=IsAnimationEnabled}"
                                AnimationDuration="{Binding Path=AnimationDuration}"
                                AnimationEasing="{Binding Path=AnimationEasing}"
                                HeaderLocation="{Binding Path=HeaderLocation}"
                                Margin="16, 16, 16, 0"
                                AutomationId="Expander">
            <primitives:RadExpander.Header>
                <primitives:ExpanderHeader BorderColor="{Binding Path=BorderColor}"
                                           BorderThickness="{Binding Path=BorderThickness}"
                                           IndicatorLocation="{Binding Path=IndicatorLocation}"
                                           IndicatorColor="{Binding Path=IndicatorColor}"
                                           IndicatorFontFamily="{StaticResource IconsFont}"
                                           IndicatorText="{Binding Path=IndicatorText}"
                                           IndicatorFontSize="{Binding Path=IndicatorFontSize}"
                                           IndicatorMargin="{Binding Path=IndicatorMargin}">
                    <Label Text="Telerik UI for Xamarin" VerticalOptions="Center"/>
                </primitives:ExpanderHeader>
            </primitives:RadExpander.Header>
            <primitives:RadExpander.Content>
                <Label Margin="15" Text="Telerik controls for Xamarin.Forms enable developers to easily implement various functionalities in their Xamarin.Forms projects and achieve the same scenarios across platforms using a single shared C# code base" />
            </primitives:RadExpander.Content>
        </primitives:RadExpander>

        <Label Text="Configuration settings:" Style="{StaticResource HeaderLabelStyle}" Margin="16, 20, 16, 0"/>

        <ScrollView VerticalOptions="FillAndExpand">
            <StackLayout Padding="16, 0, 16, 16">

                <StackLayout Orientation="Horizontal" Margin="0, 20, 0, 0">
                    <Label Text="Is Expanded" Style="{StaticResource BodyLabelStyle}" Margin="2, 0, 0, 0" VerticalOptions="Center" />
                    <primitives:RadCheckBox IsChecked="{Binding Path=IsExpanded, Mode=TwoWay}" VerticalOptions="Center" CheckedColor="Blue" AutomationId="isExpandedCheckBox"/>
                </StackLayout>

                <StackLayout Orientation="Horizontal" Margin="0, 20, 0, 0">
                    <Label Text="Is Animation Enabled" Style="{StaticResource BodyLabelStyle}" Margin="2, 0, 0, 0" VerticalOptions="Center" />
                    <primitives:RadCheckBox IsChecked="{Binding Path=IsAnimationEnabled, Mode=TwoWay}" VerticalOptions="Center" CheckedColor="Blue" AutomationId="isAnimationEnabledCheckBox"/>
                </StackLayout>
                
                <Label Text="Animation Duration" Style="{StaticResource PropertyNameLabelStyle}" />
                <Grid Margin="0, 7, 0, 7">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>

                    <StackLayout Orientation="Horizontal">
                        <Label Style="{StaticResource IconLabelStyle}" Text="{StaticResource DurationIcon}" VerticalOptions="Center" />
                        <Label Style="{StaticResource DefaultLabelStyle}" Text="{Binding AnimationDuration}" VerticalOptions="Center" />
                    </StackLayout>

                    <StackLayout Grid.Column="1" Orientation="Horizontal">
                        <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="0" VerticalOptions="Center" Margin="0, 0, 5, 0" />
                        <Slider HorizontalOptions="FillAndExpand" Value="{Binding AnimationDuration, Converter={StaticResource DoubleRoundConverter}}" Maximum="2000" Minimum="0" AutomationId="animationDurationSlider">
                            <Slider.Effects>
                                <effects:SliderColorEffect Color="Blue" />
                            </Slider.Effects>
                        </Slider>
                        <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="2000" VerticalOptions="Center" />
                    </StackLayout>
                </Grid>

                <Label Text="Animation Easing" Style="{StaticResource PropertyNameLabelStyle}" />
                <Picker SelectedItem="{Binding Path=AnimationEasing, Converter={StaticResource NameToEasingConverter}}" AutomationId="animationEasingPicker">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Linear</x:String>
                            <x:String>SinOut</x:String>
                            <x:String>SinIn</x:String>
                            <x:String>SinInOut</x:String>
                            <x:String>CubicIn</x:String>
                            <x:String>CubicOut</x:String>
                            <x:String>CubicInOut</x:String>
                            <x:String>BounceOut</x:String>
                            <x:String>BounceIn</x:String>
                            <x:String>SpringIn</x:String>
                            <x:String>SpringOut</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

                <Label Text="Header Location" Style="{StaticResource PropertyNameLabelStyle}" />
                <Picker SelectedItem="{Binding Path=HeaderLocation}" AutomationId="headerLocationPicker">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type primitives:ExpanderHeaderLocation}">
                            <primitives:ExpanderHeaderLocation>Top</primitives:ExpanderHeaderLocation>
                            <primitives:ExpanderHeaderLocation>Bottom</primitives:ExpanderHeaderLocation>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

                <Label Text="Indicator Location" Style="{StaticResource PropertyNameLabelStyle}" />
                <Picker SelectedItem="{Binding Path=IndicatorLocation}" AutomationId="indicatorLocationPicker">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type primitives:ExpandCollapseIndicatorLocation}">
                            <primitives:ExpandCollapseIndicatorLocation>Start</primitives:ExpandCollapseIndicatorLocation>
                            <primitives:ExpandCollapseIndicatorLocation>End</primitives:ExpandCollapseIndicatorLocation>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

                <Label Text="Indicator Color" Style="{StaticResource PropertyNameLabelStyle}"/>
                <Picker SelectedItem="{Binding Path=IndicatorColor, Converter={StaticResource NameToColorConverter}}" AutomationId="indicatorColortPicker">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Light Grey</x:String>
                            <x:String>Dark Grey</x:String>
                            <x:String>Pink</x:String>
                            <x:String>Blue</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

                <Label Text="Indicator Text" Style="{StaticResource PropertyNameLabelStyle}" />
                <Picker SelectedItem="{Binding Path=IndicatorText, Converter={StaticResource NameToIndicatorTextConverter}}" AutomationId="indicatorTextPicker">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Triangle</x:String>
                            <x:String>Arrow</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

                <Label Text="Indicator Font Size" Style="{StaticResource PropertyNameLabelStyle}" />
                <Grid Margin="0, 7, 0, 7">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>

                    <StackLayout Orientation="Horizontal">
                        <Label Style="{StaticResource IconLabelStyle}" Text="{StaticResource FontSizeIcon}" VerticalOptions="Center" />
                        <Label Style="{StaticResource DefaultLabelStyle}" Text="{Binding IndicatorFontSize}" VerticalOptions="Center" />
                    </StackLayout>

                    <StackLayout Grid.Column="1" Orientation="Horizontal">
                        <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="12" VerticalOptions="Center" Margin="0, 0, 5, 0" />
                        <Slider HorizontalOptions="FillAndExpand" Value="{Binding IndicatorFontSize, Converter={StaticResource DoubleRoundConverter}}" Maximum="50" Minimum="12" AutomationId="indicatorFontSizeSlider">
                            <Slider.Effects>
                                <effects:SliderColorEffect Color="Blue" />
                            </Slider.Effects>
                        </Slider>
                        <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="40" VerticalOptions="Center" />
                    </StackLayout>
                </Grid>

                <Label Text="Indicator Margin" Style="{StaticResource PropertyNameLabelStyle}" />
                <Grid Margin="0, 7, 0, 7">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>

                    <StackLayout Orientation="Horizontal">
                        <Label Style="{StaticResource IconLabelStyle}" Text="{StaticResource MarginIcon}" VerticalOptions="Center" />
                        <Label Style="{StaticResource DefaultLabelStyle}" Text="{Binding IndicatorMargin}" VerticalOptions="Center" />
                    </StackLayout>

                    <StackLayout Grid.Column="1" Orientation="Horizontal">
                        <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="0" VerticalOptions="Center" Margin="0, 0, 5, 0" />
                        <Slider HorizontalOptions="FillAndExpand" Value="{Binding IndicatorMargin, Converter={StaticResource DoubleRoundConverter}}" Maximum="20" Minimum="0" AutomationId="indicatorMarginSlider">
                            <Slider.Effects>
                                <effects:SliderColorEffect Color="Blue" />
                            </Slider.Effects>
                        </Slider>
                        <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="20" VerticalOptions="Center" />
                    </StackLayout>
                </Grid>

                <Label Text="Border Color" Style="{StaticResource PropertyNameLabelStyle}" />
                <Picker SelectedItem="{Binding Path=BorderColor, Converter={StaticResource NameToColorConverter}}" AutomationId="borderColorPicker">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Light Grey</x:String>
                            <x:String>Dark Grey</x:String>
                            <x:String>Pink</x:String>
                            <x:String>Blue</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

                <Label Text="Border Thickness" Style="{StaticResource PropertyNameLabelStyle}" />
                <Grid Margin="0, 7, 0, 7">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>

                    <StackLayout Orientation="Horizontal">
                        <Label Style="{StaticResource IconLabelStyle}" Text="{StaticResource ThicknessIcon}" VerticalOptions="Center" />
                        <Label Style="{StaticResource DefaultLabelStyle}" Text="{Binding BorderThickness}" VerticalOptions="Center" />
                    </StackLayout>

                    <StackLayout Grid.Column="1" Orientation="Horizontal">
                        <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="0" VerticalOptions="Center" Margin="0, 0, 5, 0" />
                        <Slider HorizontalOptions="FillAndExpand" Value="{Binding BorderThickness, Converter={StaticResource DoubleRoundConverter}}" Maximum="10" Minimum="0" AutomationId="borderThicknessSlider">
                            <Slider.Effects>
                                <effects:SliderColorEffect Color="Blue" />
                            </Slider.Effects>
                        </Slider>
                        <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="10" VerticalOptions="Center" />
                    </StackLayout>
                </Grid>
            </StackLayout>
        </ScrollView>
    </StackLayout>
</ContentView>