<?xml version="1.0" encoding="UTF-8"?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:QSF.Examples.PopupControl.ConfigurationExample"
             xmlns:converters="clr-namespace:QSF.Converters"
             xmlns:effects="clr-namespace:QSF.Effects"
             xmlns:primitives="clr-namespace:Telerik.XamarinForms.Primitives;assembly=Telerik.XamarinForms.Primitives"
             x:Class="QSF.Examples.PopupControl.ConfigurationExample.PopupConfigurationView">
    <ContentView.Resources>
        <ResourceDictionary>
            <Style x:Key="SliderMinMaxLabelStyle" TargetType="Label" BasedOn="{StaticResource BodyLabelStyle}">
                <Setter Property="TextColor" Value="#b4b4b5" />
                <Setter Property="FontSize" Value="14" />
            </Style>

            <Style x:Key="DefaultLabelStyle" TargetType="Label" BasedOn="{StaticResource BodyLabelStyle}">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="TextColor" Value="#4b4c4c" />
            </Style>

            <Style x:Key="PropertyNameLabelStyle" TargetType="Label" BasedOn="{StaticResource BodyLabelStyle}">
                <Setter Property="Margin" Value="2, 20, 0, -5" />
            </Style>

            <Style x:Key="IconLabelStyle" TargetType="Label">
                <Setter Property="Margin" Value="3, 0, 0, 0" />
                <Setter Property="FontFamily" Value="{StaticResource IconsFont}" />
            </Style>

            <local:NameToColorConverter x:Key="NameToColorConverter" />
            <converters:NameToEasingConverter x:Key="NameToEasingConverter" />
            <converters:DoubleRoundConverter x:Key="DoubleRoundConverter" />
        </ResourceDictionary>
    </ContentView.Resources>
    <ScrollView>
        <StackLayout Padding="16">
            <StackLayout Orientation="Horizontal" Margin="0, 20, 0, 0">
                <Label Text="Is Modal" Style="{StaticResource BodyLabelStyle}" Margin="2, 0, 0, 0" VerticalOptions="Center" />
                <primitives:RadCheckBox IsChecked="{Binding Path=IsModal, Mode=TwoWay}" VerticalOptions="Center" CheckedColor="Blue" AutomationId="isModalCheckBox"/>
            </StackLayout>

            <Label Text="Otside Background Color" Style="{StaticResource PropertyNameLabelStyle}" />
            <Picker SelectedItem="{Binding Path=OutsideBackgroundColor, Converter={StaticResource NameToColorConverter}}" AutomationId="otsideBackgroundColorPicker">
                <Picker.ItemsSource>
                    <x:Array Type="{x:Type x:String}">
                        <x:String>Transparent</x:String>
                        <x:String>Light Grey</x:String>
                        <x:String>Dark Grey</x:String>
                        <x:String>Pink</x:String>
                        <x:String>Blue</x:String>
                    </x:Array>
                </Picker.ItemsSource>
            </Picker>

            <StackLayout Orientation="Horizontal" Margin="0, 20, 0, 0">
                <Label Text="Placement" Style="{StaticResource BodyLabelStyle}" Margin="2, 0, 0, 0" VerticalOptions="Center" />
                <Picker SelectedItem="{Binding Path=Placement}" AutomationId="placementPicker">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type primitives:PlacementMode}">
                            <primitives:PlacementMode>Left</primitives:PlacementMode>
                            <primitives:PlacementMode>Top</primitives:PlacementMode>
                            <primitives:PlacementMode>Right</primitives:PlacementMode>
                            <primitives:PlacementMode>Bottom</primitives:PlacementMode>
                            <primitives:PlacementMode>Center</primitives:PlacementMode>
                            <primitives:PlacementMode>Relative</primitives:PlacementMode>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>
            </StackLayout>

            <StackLayout Orientation="Horizontal" Margin="0, 20, 0, 0">
                <Label Text="Animation Type" Style="{StaticResource BodyLabelStyle}" Margin="2, 0, 0, 0" VerticalOptions="Center" />
                <Picker SelectedItem="{Binding Path=AnimationType}" AutomationId="animationTypePicker">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type primitives:PopupAnimationType}">
                            <primitives:PopupAnimationType>None</primitives:PopupAnimationType>
                            <primitives:PopupAnimationType>Fade</primitives:PopupAnimationType>
                            <primitives:PopupAnimationType>Zoom</primitives:PopupAnimationType>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>
            </StackLayout>

            <Label Text="Animation Duration" Style="{StaticResource PropertyNameLabelStyle}" />
            <Grid Margin="0, 7, 0, 7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>

                <StackLayout Orientation="Horizontal">
                    <Label Style="{StaticResource IconLabelStyle}" Text="{StaticResource DurationIcon}" VerticalOptions="Center" />
                    <Label Style="{StaticResource DefaultLabelStyle}" Text="{Binding AnimationDuration}" VerticalOptions="Center" />
                </StackLayout>

                <StackLayout Grid.Column="1" Orientation="Horizontal">
                    <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="0" VerticalOptions="Center" Margin="0, 0, 5, 0" />
                    <Slider HorizontalOptions="FillAndExpand" Value="{Binding AnimationDuration, Converter={StaticResource DoubleRoundConverter}}" Maximum="2000" Minimum="0" AutomationId="animationDurationSlider">
                        <Slider.Effects>
                            <effects:SliderColorEffect Color="Blue" />
                        </Slider.Effects>
                    </Slider>
                    <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="2000" VerticalOptions="Center" />
                </StackLayout>
            </Grid>

            <Label Text="Animation Easing" Style="{StaticResource PropertyNameLabelStyle}" />
            <Picker SelectedItem="{Binding Path=AnimationEasing, Converter={StaticResource NameToEasingConverter}}" AutomationId="animationEasingPicker">
                <Picker.ItemsSource>
                    <x:Array Type="{x:Type x:String}">
                        <x:String>Linear</x:String>
                        <x:String>SinOut</x:String>
                        <x:String>SinIn</x:String>
                        <x:String>SinInOut</x:String>
                        <x:String>CubicIn</x:String>
                        <x:String>CubicOut</x:String>
                        <x:String>CubicInOut</x:String>
                        <x:String>BounceOut</x:String>
                        <x:String>BounceIn</x:String>
                        <x:String>SpringIn</x:String>
                        <x:String>SpringOut</x:String>
                    </x:Array>
                </Picker.ItemsSource>
            </Picker>
            
            <Label Text="Horizontal Offset" Style="{StaticResource PropertyNameLabelStyle}" />
            <Grid Margin="0, 7, 0, 7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>

                <StackLayout Orientation="Horizontal">
                    <Label Style="{StaticResource IconLabelStyle}" Text="{StaticResource HorizontalOffsetIcon}" VerticalOptions="Center" />
                    <Label Style="{StaticResource DefaultLabelStyle}" Text="{Binding HorizontalOffset}" VerticalOptions="Center" />
                </StackLayout>

                <StackLayout Grid.Column="1" Orientation="Horizontal">
                    <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="0" VerticalOptions="Center" Margin="0, 0, 5, 0" />
                    <Slider HorizontalOptions="FillAndExpand" Value="{Binding HorizontalOffset, Converter={StaticResource DoubleRoundConverter}}" Minimum="0" Maximum="200" AutomationId="horizontalOffsetSlider">
                        <Slider.Effects>
                            <effects:SliderColorEffect Color="Blue" />
                        </Slider.Effects>
                    </Slider>
                    <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="2000" VerticalOptions="Center" />
                </StackLayout>
            </Grid>

            <Label Text="Vertical Offset" Style="{StaticResource PropertyNameLabelStyle}" />
            <Grid Margin="0, 7, 0, 7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>

                <StackLayout Orientation="Horizontal">
                    <Label Style="{StaticResource IconLabelStyle}" Text="{StaticResource VerticalOffsetIcon}" VerticalOptions="Center" />
                    <Label Style="{StaticResource DefaultLabelStyle}" Text="{Binding VerticalOffset}" VerticalOptions="Center" />
                </StackLayout>

                <StackLayout Grid.Column="1" Orientation="Horizontal">
                    <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="0" VerticalOptions="Center" Margin="0, 0, 5, 0" />
                    <Slider HorizontalOptions="FillAndExpand" Value="{Binding VerticalOffset, Converter={StaticResource DoubleRoundConverter}}" Minimum="0" Maximum="200" AutomationId="verticalOffsetSlider">
                        <Slider.Effects>
                            <effects:SliderColorEffect Color="Blue" />
                        </Slider.Effects>
                    </Slider>
                    <Label Style="{StaticResource SliderMinMaxLabelStyle}" Text="2000" VerticalOptions="Center" />
                </StackLayout>
            </Grid>
        </StackLayout>
    </ScrollView>
</ContentView>